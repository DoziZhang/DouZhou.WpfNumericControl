<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:local="clr-namespace:DouZhou.WpfNumericControl"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <!--  Converters  -->
    <local:String2VisibilityConverter x:Key="String2VisibilityConverter" />
    <local:String2VisibilityReConverter x:Key="String2VisibilityReConverter" />
    <local:BooleanReverseConverter x:Key="BoolReverseCvt" />
    <!--  Default Values  -->
    <sys:Int32 x:Key="DefaultBorderRadius">5</sys:Int32>
    <CornerRadius x:Key="DefaultCornerRadius">5</CornerRadius>
    <Thickness x:Key="DefaultControlPadding">10,5</Thickness>
    <Thickness x:Key="DefaultInputPadding">8,0</Thickness>
    <Geometry o:Freeze="True" x:Key="DownGeometry">M512 801.6896L5.12 282.0096l58.1632-59.5968L512 682.3936l448.7168-460.0832 58.1632 59.5968-506.88 519.7824z</Geometry>
    <Geometry o:Freeze="True" x:Key="UpGeometry">M50.000001,0 L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288 z</Geometry>
    <!--  Brushes  -->
    <SolidColorBrush
        o:Freeze="True"
        x:Key="PrimaryTextBrush"
        Color="#212121" />
    <SolidColorBrush
        o:Freeze="True"
        x:Key="ThirdlyTextBrush"
        Color="{DynamicResource ThirdlyTextColor}" />
    <!--  Styles  -->
    <Style TargetType="local:WatermarkTextBox" x:Key="NumericTextStyle">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="Button" x:Key="NumericButtonStyle">
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentControl
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Path
                                Fill="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True"
                                Stretch="Uniform"
                                Width="{TemplateBinding local:IconElement.Width}"
                                Height="{TemplateBinding local:IconElement.Height}"
                                Data="{TemplateBinding local:IconElement.Geometry}" />
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WatermarkTextBoxBaseStyle" TargetType="local:WatermarkTextBox">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:WatermarkTextBox">
                    <local:SimplePanel>
                        <TextBlock
                            Text="{TemplateBinding Watermark}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="{DynamicResource ThirdlyTextBrush}"
                            Margin="{TemplateBinding Padding}"
                            x:Name="PART_Watermark"
                            Visibility="{TemplateBinding Text,
                                                         Converter={StaticResource String2VisibilityReConverter}}" />
                        <ScrollViewer
                            Margin="-2,0"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </local:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:WatermarkTextBox}" BasedOn="{StaticResource WatermarkTextBoxBaseStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownBase}" x:Key="NumericUpDownBaseDefaultStyle">
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <!--  Default template  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDownBase}">
                    <local:SimplePanel>
                        <Border
                            CornerRadius="{StaticResource DefaultCornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <local:WatermarkTextBox
                                x:Name="PART_TextBox"
                                Grid.Column="0"
                                Grid.RowSpan="2"
                                Style="{StaticResource NumericTextStyle}"
                                CaretBrush="{TemplateBinding CaretBrush}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontSize="{TemplateBinding FontSize}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Padding="{TemplateBinding Padding}"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Text="{Binding ValueString, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
                            <Button
                                x:Name="PART_IncreaseButton"
                                VerticalContentAlignment="Bottom"
                                Style="{StaticResource NumericButtonStyle}"
                                Grid.Column="1"
                                Grid.Row="0"
                                MinWidth="15"
                                local:IconElement.Width="14"
                                local:IconElement.Height="6"
                                local:IconElement.Geometry="{StaticResource UpGeometry}" />
                            <Button
                                x:Name="PART_DecreaseButton"
                                VerticalContentAlignment="Top"
                                Style="{StaticResource NumericButtonStyle}"
                                Grid.Column="1"
                                Grid.Row="1"
                                MinWidth="15"
                                local:IconElement.Width="14"
                                local:IconElement.Height="6"
                                local:IconElement.Geometry="{StaticResource DownGeometry}" />
                        </Grid>
                    </local:SimplePanel>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowUpDownButton, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:NumericUpDownBase}">
                            <local:SimplePanel>
                                <Border
                                    CornerRadius="{StaticResource DefaultCornerRadius}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                                <local:WatermarkTextBox
                                    x:Name="PART_TextBox"
                                    Grid.Column="0"
                                    Grid.RowSpan="2"
                                    Style="{StaticResource NumericTextStyle}"
                                    CaretBrush="{TemplateBinding CaretBrush}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontStretch="{TemplateBinding FontStretch}"
                                    FontStyle="{TemplateBinding FontStyle}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Padding="{TemplateBinding Padding}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Text="{Binding ValueString, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
                                <!--  Collapsed Button  -->
                                <Button
                                    x:Name="PART_IncreaseButton"
                                    Style="{StaticResource NumericButtonStyle}"
                                    Visibility="Collapsed"
                                    IsEnabled="False"
                                    Content="+" />
                                <Button
                                    x:Name="PART_DecreaseButton"
                                    Style="{StaticResource NumericButtonStyle}"
                                    Visibility="Collapsed"
                                    IsEnabled="False"
                                    Content="-" />
                            </local:SimplePanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:NumericUpDownBase}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownByte}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownSByte}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownInt16}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownUInt16}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownInt32}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownUInt32}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownInt64}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownUInt64}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownSingle}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
    <Style TargetType="{x:Type local:NumericUpDownDouble}" BasedOn="{StaticResource NumericUpDownBaseDefaultStyle}" />
</ResourceDictionary>
